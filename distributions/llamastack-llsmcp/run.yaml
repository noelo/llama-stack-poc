version: 2
image_name: llamastack-llsmcp
container_image: llamastack-llsmcp
apis:
- inference
- safety
- agents
- vector_io
- datasetio
- scoring
- eval
- post_training
- tool_runtime
- telemetry
- files
providers:
  inference:
  - provider_id: vllm-0
    provider_type: remote::vllm
    config:
      url: ${env.VLLM_URL}
      max_tokens: 4096
      api_token: ${env.VLLM_API_TOKEN}
  safety: []
  agents:
  - provider_id: meta-reference
    provider_type: inline::meta-reference
    config:
      persistence_store:
        type: sqlite
        db_path: ${env.SQLITE_STORE_DIR:=~/.llama/distributions/llamastack-llsmcp}/agents_store.db
      responses_store:
        type: sqlite
        db_path: ${env.SQLITE_STORE_DIR:=~/.llama/distributions/llamastack-llsmcp}/responses_store.db
  vector_io:
  - provider_id: meta-reference
    provider_type: inline::meta-reference
    config:
      kvstore:
        type: sqlite
        db_path: ${env.SQLITE_STORE_DIR:=~/.llama/distributions/llamastack-llsmcp}/faiss_store.db
  datasetio: []
  scoring: []
  eval: []
  post_training: 
  - provider_id: torchtune
    provider_type: inline::torchtune
    config:
      checkpoint_format: meta
  tool_runtime:
  - provider_id: model-context-protocol
    provider_type: remote::model-context-protocol
    config: {}
  telemetry:
  - provider_id: meta-reference
    provider_type: inline::meta-reference
    config:
      service_name: "${env.OTEL_SERVICE_NAME:=\u200B}"
      sinks: ${env.TELEMETRY_SINKS:=console,sqlite}
      sqlite_db_path: ${env.SQLITE_STORE_DIR:=~/.llama/distributions/llamastack-llsmcp}/trace_store.db
      otel_exporter_otlp_endpoint: ${env.OTEL_EXPORTER_OTLP_ENDPOINT:=}
  files:
  - provider_id: localfs
    provider_type: inline::localfs
    config:
      storage_dir: ${env.FILES_STORAGE_DIR:=~/.llama/distributions/llamastack-llsmcp/files}
      metadata_store:
        type: sqlite
        db_path: ${env.SQLITE_STORE_DIR:=~/.llama/distributions/llamastack-llsmcp}/files_metadata.db
metadata_store: null
inference_store: null
models:
- metadata: {}
  model_id: ${env.INFERENCE_MODEL}
  provider_id: vllm-0
  model_type: llm
shields: []
vector_dbs: []
datasets: []
scoring_fns: []
benchmarks: []
tool_groups: 
    - toolgroup_id: mcp::github
      provider_id: model-context-protocol
      mcp_endpoint:
        uri: http://githubmcp.agentic-ai.svc.cluster.local:80/sse
logging: null
server:
  port: 8321
  tls_certfile: null
  tls_keyfile: null
  tls_cafile: null
  auth: null
  host: null
  quota: null
external_providers_dir:
